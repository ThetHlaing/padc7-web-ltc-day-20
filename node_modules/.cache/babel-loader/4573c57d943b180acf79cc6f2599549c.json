{"ast":null,"code":"import { retrieveData, storeData } from \"../utilies/localStorage\";\nimport firestore from '../utilies/firebase';\nexport var fetchArticles = function fetchArticles() {\n  return function (dispatch) {\n    //const articles = retrieveData('articles');\n    var articles = [];\n    var articlesData = firestore.collection('articles').get();\n    articlesData.then(function (snapshot) {\n      snapshot.docs.forEach(function (item) {\n        var article = item.data();\n        article.id = item.id;\n        articles.push(article);\n      });\n      console.log(\"articles\", articles);\n      dispatch({\n        type: 'FETCH_ARTICLES',\n        data: articles\n      });\n    });\n  };\n};\nexport var insertArticle = function insertArticle(article) {\n  return function (dispatch) {\n    // article.id = 12;\n    firestore.collection('articles').add(article).then(function (data) {\n      article.id = data.id;\n      dispatch({\n        type: 'ADD_NEW_ARTICLE',\n        article: article\n      });\n    });\n  };\n};\nexport var deleteArticle = function deleteArticle(id, cb) {\n  return function (dispatch) {\n    firestore.collection('articles').doc(id).delete().then(function (data) {\n      dispatch({\n        type: 'DELETE_ARTICLE',\n        id: id\n      });\n      cb();\n    });\n  };\n};","map":{"version":3,"sources":["/media/thet/Data/PADC/PADC 7/Repos/Day 20 - Firebase/src/actions/articleActions.js"],"names":["retrieveData","storeData","firestore","fetchArticles","dispatch","articles","articlesData","collection","get","then","snapshot","docs","forEach","item","article","data","id","push","console","log","type","insertArticle","add","deleteArticle","cb","doc","delete"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,SAArB,QAAqC,yBAArC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC7C;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,YAAY,GAAGJ,SAAS,CAACK,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,EAArB;AACAF,IAAAA,YAAY,CAACG,IAAb,CAAmB,UAACC,QAAD,EAAc;AAC/BA,MAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAuB,UAAAC,IAAI,EAAI;AAC7B,YAAMC,OAAO,GAAGD,IAAI,CAACE,IAAL,EAAhB;AACAD,QAAAA,OAAO,CAACE,EAAR,GAAaH,IAAI,CAACG,EAAlB;AACAX,QAAAA,QAAQ,CAACY,IAAT,CAAcH,OAAd;AACD,OAJD;AAKAI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBd,QAAvB;AACAD,MAAAA,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAE,gBADC;AAEPL,QAAAA,IAAI,EAAGV;AAFA,OAAD,CAAR;AAID,KAXD;AAaD,GAjB4B;AAAA,CAAtB;AAmBP,OAAO,IAAMgB,aAAa,GAAG,SAAhBA,aAAgB,CAACP,OAAD;AAAA,SAAa,UAAAV,QAAQ,EAAI;AACpD;AACAF,IAAAA,SAAS,CAACK,UAAV,CAAqB,UAArB,EAAiCe,GAAjC,CAAqCR,OAArC,EAA8CL,IAA9C,CAAoD,UAACM,IAAD,EAAU;AAC5DD,MAAAA,OAAO,CAACE,EAAR,GAAaD,IAAI,CAACC,EAAlB;AACAZ,MAAAA,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAE,iBADC;AAEPN,QAAAA,OAAO,EAAGA;AAFH,OAAD,CAAR;AAID,KAND;AASD,GAX4B;AAAA,CAAtB;AAcP,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACP,EAAD,EAAIQ,EAAJ;AAAA,SAAW,UAAApB,QAAQ,EAAI;AAClDF,IAAAA,SAAS,CAACK,UAAV,CAAqB,UAArB,EAAiCkB,GAAjC,CAAqCT,EAArC,EAAyCU,MAAzC,GAAkDjB,IAAlD,CAAuD,UAAAM,IAAI,EAAI;AAC7DX,MAAAA,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAG,gBADA;AAEPJ,QAAAA,EAAE,EAAGA;AAFE,OAAD,CAAR;AAIAQ,MAAAA,EAAE;AACH,KAND;AAUD,GAX4B;AAAA,CAAtB","sourcesContent":["import {retrieveData,storeData} from \"../utilies/localStorage\";\nimport firestore from '../utilies/firebase';\n\nexport const fetchArticles = () => dispatch => {  \n  //const articles = retrieveData('articles');\n  const articles = []\n  const articlesData = firestore.collection('articles').get();\n  articlesData.then( (snapshot) => {\n    snapshot.docs.forEach( item => {\n      const article = item.data();\n      article.id = item.id;\n      articles.push(article);\n    });\n    console.log(\"articles\",articles);\n    dispatch({\n      type: 'FETCH_ARTICLES',\n      data : articles\n    });\n  })\n  \n};\n\nexport const insertArticle = (article) => dispatch => {  \n  // article.id = 12;\n  firestore.collection('articles').add(article).then( (data) => {\n    article.id = data.id;\n    dispatch({\n      type: 'ADD_NEW_ARTICLE',\n      article : article\n    });\n  });\n  \n  \n};\n\n\nexport const deleteArticle = (id,cb) => dispatch => {\n  firestore.collection('articles').doc(id).delete().then(data => {\n    dispatch({\n      type : 'DELETE_ARTICLE',\n      id : id\n    });\n    cb();\n  });\n  \n\n  \n}\n"]},"metadata":{},"sourceType":"module"}